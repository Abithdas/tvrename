image: Visual Studio 2017
configuration: Release
platform: Any CPU
skip_non_tags: true
clone_depth: 1

cache:
- packages -> **\packages.config

init:
- ps: >-
    $tag = $env:APPVEYOR_REPO_TAG_NAME.TrimStart("v")

    Update-AppveyorBuild -Version "$($tag)"

    $version = $tag -split '-'

    $short = $version[0].TrimEnd(".0")

    $friendly = $short

    If ($version[1]) {
      $end = (Get-Culture).TextInfo.ToTitleCase($version[1].Replace("rc", "RC"))
      $friendly += " " + $end -replace "([a-z]+)(\d+)",'$1 $2'
    }

    $env:APPVEYOR_BUILD_VERSION_SHORT = $short

    $env:APPVEYOR_BUILD_VERSION_FRIENDLY = $friendly

    $env:APPVEYOR_BUILD_VERSION

    $env:APPVEYOR_BUILD_VERSION_SHORT

    $env:APPVEYOR_BUILD_VERSION_FRIENDLY

assembly_info:
  patch: true
  file: TVRename#\Properties\AssemblyInfo.cs
  # assembly_version: '$(APPVEYOR_BUILD_VERSION_SHORT)'
  # assembly_file_version: '$(APPVEYOR_BUILD_VERSION_FRIENDLY)'
  assembly_informational_version: '2.1' # Used for settings path

test: off

before_build:
- cmd: nuget restore

build:
  verbosity: minimal

after_build:
- cmd: curl -fsS -o Inetc.zip http://nsis.sourceforge.net/mediawiki/images/c/c9/Inetc.zip
- cmd: curl -fsS -o Registry.zip http://nsis.sourceforge.net/mediawiki/images/4/47/Registry.zip
- cmd: 7z x -r -aoa -sdel Inetc.zip -o"%PROGRAMFILES(x86)%\NSIS"
- cmd: 7z x -r -aoa -sdel Registry.zip -o"%PROGRAMFILES(x86)%\NSIS" Desktop
- cmd: '"%PROGRAMFILES(x86)%\NSIS\makensis" /WX /DVERSION="%APPVEYOR_BUILD_VERSION%" Installer\TVRename.nsi'

artifacts:
- path: 'Installer\TVRename-$(appveyor_build_version).exe'
  name: 'TVRename-$(appveyor_build_version)'

deploy:
- provider: GitHub
  auth_token:
    secure: N9IXwzwtulNUU5FVDy1+z7ZKbYuSWhtrrTosnaoLApyLas6XEd1whQNZYnpYKBnJ
  artifact: 'TVRename-$(appveyor_build_version)'
  on:
    appveyor_repo_tag: true
